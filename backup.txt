    char pwd[PASSLEN];
    for(int i =0; i<PASSLEN; i++)
    {
        pwd[i] = '0';
    }
    cin>>pwd;

    // uint8_t *pwd = (uint8_t *)strdup(PWD);
    
    
    uint8_t salt[SALTLEN];
    memset( salt, 0x00, SALTLEN );
    uint8_t hashed[HASHLEN];

    uint32_t pwdlen = strlen((char *)pwd);

    uint32_t t_cost = 2;            // 1-pass computation
    uint32_t m_cost = (1<<16);      // 64 mebibytes memory usage
    uint32_t parallelism = 1;

    for(int i:pwd)
    {
        printf("%c", i);
    }
    printf("\n");

    argon2i_hash_raw(t_cost, m_cost, parallelism, pwd, pwdlen, salt, SALTLEN, hashed, HASHLEN);

    for(int i=0; i<HASHLEN ; i++)
    {
        printf("%d", hashed[i]);
    }
    printf("\n");